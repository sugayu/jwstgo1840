#+title: JWST custom pipeline for GO1840

* Installation
** conda environment
First, it is recommended to create a new Python environment using ~conda~ and to work in the virtual environment.
This is an example to create a virtual environment ~jwstcal~ (shared by Ken).
#+begin_src bash
  conda create -n jwstcal --file https://ssb.stsci.edu/releases/jwstdp/1.9.5/conda_python_macos-stable-deps.txt
  conda activate jwstcal
  pip install -r https://ssb.stsci.edu/releases/jwstdp/1.9.5/reqs_macos-stable-deps.txt
  pip install jdaviz
  pip install jupyter
  pip install multiprocess        # methods of multiprocessing used by Alex
#+end_src

** pip install
When the Github repository is public, you can install ~jwstgo1840~ using ~pip~:
#+begin_src bash
  pip install git+https://github.com/sugayu/jwstgo1840.git  # this may not be working.
#+end_src
However, ~jwstgo1840~ is currently private; therefore, you have to pass an authentication.

There are two ways of authentication.
The first way would be recommend if you can use SSH.

1) SSH public key authentication.

   If you put your public key in Github, you can access to and pip the repository with
#+begin_src bash
  pip install git+ssh://git@github.com/sugayu/jwstgo1840.git
#+end_src


2) HTTP connection with personal access token authentication.

   If you have a personal access token created in Github, you can use it as
#+begin_src bash
  pip install git+https://YOUR_GITHUB_TOKEN@github.com/sugayu/jwstgo1840.git
#+end_src
   where ~YOUR_GITHUB_TOKEN~ is your personal access token.
   Please google details of the token.

To update the package, you may need to add the ~--upgrade~ option.
#+begin_src bash
  pip install --upgrade git+https://github.com/sugayu/jwstgo1840.git  # this may not be working too.
#+end_src

* Short description
** Implementations
In our custom pipeline, we added (currently) two reduction steps during the process of the JWST official pipeline.
One is AfterDetector1Pipeline and the other is AfterSpec2Pipeline.

In AfterDetector1Pipeline, there are three additional reduction processes:
  1) masking outliers (including hot pixels),
  2) subtracting 1/f noises,
  3) sigma clipping.
Present pipeline may not need the sigma clipping, so that it is turned off in the example below.

In AfterDetector1Pipeline, there are three additional reduction processes:
  1) sigma clipping
  2) masking slit edges,
  3) subtracting global background.

** Not implemented (or to do)
The custom pipeline does not include
  1) wcs matching,
  2) local background subtraction

Functions needed for wcs matching has been already written in the code,
but this step needs additional emission-line maps created from NIRCam images.
Therefore, the wcs matching is not automatically processed in the current custom pipeline.

From discussions in team meetings and external meetings, we concluded that the flux calibration is converged in the JWST official pipeline.
Therefore, additional flux calibration steps are not implemented.

* Example
Examples are written in the example directory.

An example of NIRSpec calibration is written in example/calib_nirspecifu.py.
